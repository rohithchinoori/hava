import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./index.css";
import Navbar from "../Navbar";
import Sidebar from "../Sidebar";

const initialData = [
  {
    id: 0,
    name: "All Airports",
    country: "Country",
    code: "code",
    Terminal: "Terminal",
  },
  {
    id: 1,
    name: "Indira Gandhi International Airport",
    country: "India",
    code: "DEL",
    Terminal: 3,
  },
  {
    id: 2,
    name: "Dubai International Airport",
    country: "UAE",
    code: "DXB",
    Terminal: 5,
  },
  {
    id: 3,
    name: "Heathrow International Airport",
    country: "England",
    code: "LHR",
    Terminal: 6,
  },
  {
    id: 4,
    name: "Istanbul Airport",
    country: "Turkey",
    code: "IST",
    Terminal: 3,
  },
  {
    id: 5,
    name: "Rajiv Gandhi International Airport",
    country: "India",
    code: "DFW",
    Terminal: 14,
  },
];

const Home = () => {
  const [data, setData] = useState(initialData);
  const navigate = useNavigate();

  const handleDelete = (id) => {
    const updatedData = data.filter((item) => item.id !== id);
    setData(updatedData);
  };

  const handleItemClick = (name) => {
    navigate("/airport-details", { state: { airportName: name } });
  };

  return (
    <>
      <Navbar />
      <div className="home-bg">
        <Sidebar />
        <div className="right">
          <div className="home-header">
            <h1>Airport</h1>
            <button className="add">+Add new</button>
          </div>
          <ul className="airport-list">
            {data.map((item) => (
              <li key={item.id} onClick={() => handleItemClick(item.name)}>
                <div className="check">
                  <input type="checkbox" className="checkbox" />
                  <p>{item.name}</p>
                </div>
                <p className="country">{item.country}</p>
                <p className="code">{item.code}</p>
                <p className="ter">{item.Terminal}</p>
                {item.id !== 0 && (
                  <>
                    <button className="edit">
                      <svg
                        width="16"
                        height="16"
                        viewBox="0 0 16 16"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M15.7835 3.10001L12.9 0.216009C12.8431 0.159446 12.7755 0.114725 12.7012 0.0844306C12.6269 0.0541361 12.5473 0.0388683 12.467 0.0395091H12.45C12.2753 0.0455906 12.1095 0.118209 11.9865 0.242509L1.54203 10.686C1.48314 10.7447 1.43998 10.8173 1.41653 10.897L0.0275284 15.55C-0.0294716 15.7385 0.257028 15.9755 0.419028 15.9755C0.429467 15.9756 0.439881 15.9745 0.450028 15.972C0.588028 15.9405 4.38303 14.8 5.10553 14.583C5.18391 14.5596 5.25511 14.5168 5.31253 14.4585L15.7565 4.01401C15.8747 3.89608 15.9458 3.73911 15.9565 3.57251C15.9629 3.48598 15.9508 3.39908 15.921 3.31761C15.8911 3.23613 15.8443 3.16195 15.7835 3.10001ZM4.70003 13.658C3.61953 13.9825 2.26903 14.3905 1.33553 14.669L2.34003 11.304L4.70003 13.658Z"
                          fill="#464646"
                        />
                      </svg>
                    </button>
                    <button
                      className="delete"
                      onClick={(e) => {
                        e.stopPropagation(); // Prevent triggering item click
                        handleDelete(item.id);
                      }}
                    >
                      <svg
                        width="15"
                        height="16"
                        viewBox="0 0 15 16"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M14.75 2H11V1C11 0.734784 10.8946 0.48043 10.7071 0.292893C10.5196 0.105357 10.2652 0 10 0H5C4.73478 0 4.48043 0.105357 4.29289 0.292893C4.10536 0.48043 4 0.734784 4 1V2H0.25C0.183696 2 0.120107 2.02634 0.0732234 2.07322C0.0263393 2.12011 0 2.1837 0 2.25V2.75C0 2.8163 0.0263393 2.87989 0.0732234 2.92678C0.120107 2.97366 0.183696 3 0.25 3H1.25L2.4565 15.55C2.46894 15.6738 2.52706 15.7884 2.61951 15.8717C2.71197 15.9549 2.83212 16.0006 2.9565 16H12.046C12.1704 16.0006 12.2905 15.9549 12.383 15.8717C12.4754 15.7884 12.5336 15.6738 12.546 15.55L13.75 3H14.75C14.8163 3 14.8799 2.97366 14.9268 2.92678C14.9737 2.87989 15 2.8163 15 2.75V2.25C15 2.1837 14.9737 2.12011 14.9268 2.07322C14.8799 2.02634 14.8163 2 14.75 2ZM4.5325 13.5C4.46693 13.5044 4.40113 13.4959 4.33887 13.4748C4.2766 13.4538 4.2191 13.4207 4.16964 13.3774C4.12018 13.3341 4.07974 13.2815 4.05064 13.2226C4.02153 13.1637 4.00432 13.0996 4 13.034L3.4645 5.034C3.4601 4.96834 3.46868 4.90245 3.48974 4.84011C3.5108 4.77776 3.54394 4.72017 3.58726 4.67063C3.63058 4.62109 3.68323 4.58057 3.74221 4.55138C3.80119 4.52219 3.86534 4.5049 3.931 4.5005C3.99666 4.4961 4.06255 4.50468 4.12489 4.52574C4.18724 4.5468 4.24483 4.57994 4.29437 4.62326C4.34391 4.66658 4.38443 4.71923 4.41362 4.77821C4.44281 4.83719 4.4601 4.90134 4.4645 4.967L5 12.967C5.00442 13.0326 4.99591 13.0984 4.97486 13.1607C4.95382 13.223 4.92067 13.2806 4.87736 13.3301C4.83404 13.3795 4.7814 13.42 4.72241 13.4491C4.66343 13.4782 4.59928 13.4955 4.5325 13.5ZM10.5005 13.034C10.4961 13.0996 10.4788 13.1637 10.4496 13.2226C10.4204 13.2815 10.38 13.3341 10.3305 13.3774C10.281 13.4207 10.2235 13.4538 10.1613 13.4748C10.099 13.4959 10.0331 13.5044 9.9675 13.5C9.90072 13.4955 9.83657 13.4782 9.77759 13.4491C9.7186 13.42 9.66596 13.3795 9.62264 13.3301C9.57933 13.2806 9.54618 13.223 9.52514 13.1607C9.50409 13.0984 9.49552 13.0326 9.5 12.967L10.0355 4.967C10.0399 4.90134 10.0582 4.83719 10.0874 4.77821C10.1166 4.71923 10.1571 4.66658 10.2066 4.62326C10.2562 4.57994 10.3138 4.5468 10.3761 4.52574C10.4384 4.50468 10.5043 4.4961 10.57 4.5005C10.6357 4.5049 10.6998 4.52219 10.7588 4.55138C10.8178 4.58057 10.8704 4.62109 10.9137 4.67063C10.9571 4.72017 10.9902 4.77776 11.0113 4.84011C11.0323 4.90245 11.0409 4.96834 11.0365 5.034L10.5005 13.034ZM7.2675 13.5H7.25C7.11848 13.5 6.99457 13.4473 6.90683 13.3536C6.81909 13.2599 6.776 13.1342 6.789 13.006L7.289 5.006C7.2947 4.93862 7.31722 4.87398 7.3543 4.81931C7.39139 4.76465 7.44194 4.72167 7.50164 4.69554C7.56135 4.66941 7.62831 4.66092 7.69402 4.67104C7.75973 4.68115 7.82191 4.70951 7.87398 4.75332C7.92606 4.79713 7.96607 4.85474 7.98995 4.92018C8.01383 4.98562 8.0207 5.05677 8.01 5.126L7.51 13.126C7.49983 13.2598 7.44473 13.3866 7.35574 13.4749C7.26675 13.5633 7.14955 13.6053 7.0285 13.5905L7.2675 13.5Z"
                          fill="#464646"
                        />
                      </svg>
                    </button>
                  </>
                )}
              </li>
            ))}
          </ul>
        </div>
      </div>
    </>
  );
};

export default Home;
